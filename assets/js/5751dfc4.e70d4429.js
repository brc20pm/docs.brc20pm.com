"use strict";(self.webpackChunkagile_docs=self.webpackChunkagile_docs||[]).push([[900],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,h=p["".concat(l,".").concat(m)]||p[m]||u[m]||a;return n?r.createElement(h,i(i({ref:t},d),{},{components:n})):r.createElement(h,i({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5317:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return d},default:function(){return p}});var r=n(3117),o=n(102),a=(n(7294),n(3905)),i=["components"],s={id:"others",title:"Other Notes",sidebar_label:"Others Notes",slug:"/others"},l=void 0,c={unversionedId:"others",id:"others",title:"Other Notes",description:"Disabled attributes",source:"@site/docs/other.md",sourceDirName:".",slug:"/others",permalink:"/docs/others",editUrl:"https://github.com/brc20pm/documentation/tree/develop/docs/other.md",tags:[],version:"current",lastUpdatedAt:1717174751,formattedLastUpdatedAt:"6/1/2024",frontMatter:{id:"others",title:"Other Notes",sidebar_label:"Others Notes",slug:"/others"},sidebar:"docs",previous:{title:"\ud83d\udcc4 JSON-RPC",permalink:"/docs/jsonrpc"}},d=[{value:"Disabled attributes",id:"disabled-attributes",children:[],level:3},{value:"Execution restrictions",id:"execution-restrictions",children:[],level:3},{value:"Minimum OutValue",id:"minimum-outvalue",children:[],level:3},{value:"Zero address",id:"zero-address",children:[],level:3},{value:"How to use the front end for script interaction?",id:"how-to-use-the-front-end-for-script-interaction",children:[{value:"TestNet || MainNet",id:"testnet--mainnet",children:[{value:"<code>send || deploy</code>",id:"send--deploy",children:[],level:5}],level:4},{value:"LocalNet",id:"localnet",children:[{value:"<code>send || deploy</code>",id:"send--deploy-1",children:[],level:5}],level:4}],level:3},{value:"Where is the script stored?",id:"where-is-the-script-stored",children:[],level:3},{value:"Who runs BRC20pm\u2019s nodes?",id:"who-runs-brc20pms-nodes",children:[],level:3}],u={toc:d};function p(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"disabled-attributes"},"Disabled attributes"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"for"),"\n",(0,a.kt)("strong",{parentName:"p"},"while"),"\n",(0,a.kt)("strong",{parentName:"p"},"do while"),"\n",(0,a.kt)("strong",{parentName:"p"},".forEach"),"\n",(0,a.kt)("strong",{parentName:"p"},"Date"),"\n",(0,a.kt)("strong",{parentName:"p"},"Math.random")),(0,a.kt)("h3",{id:"execution-restrictions"},"Execution restrictions"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"The duration of each trading operation is only 3 seconds. If the limit is exceeded, execution will fail. It should be noted that you should not rely on execution duration. Instead, the code limits the stack depth to 512 and the forAny iteration limit to 5000 times for optimization**")),(0,a.kt)("h3",{id:"minimum-outvalue"},"Minimum OutValue"),(0,a.kt)("p",null,"The first output address's satoshi should be greater than or equal to ",(0,a.kt)("strong",{parentName:"p"},"2000")),(0,a.kt)("h3",{id:"zero-address"},"Zero address"),(0,a.kt)("p",null,"We use ",(0,a.kt)("inlineCode",{parentName:"p"},"ord000000000000000000000000000000000000000")," instead of zero address"),(0,a.kt)("p",null,"For example, there is a token transfer log"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"this.event({\n    name:'...'\n    from:'ord000000000000000000000000000000000000000',\n    to:'...'\n})\n")),(0,a.kt)("p",null,"The indexer will consider this to be a mint event from address zero"),(0,a.kt)("p",null,"Although this does seem ridiculous, we can't think of a better way to solve this matter..."),(0,a.kt)("h3",{id:"how-to-use-the-front-end-for-script-interaction"},"How to use the front end for script interaction?"),(0,a.kt)("h4",{id:"testnet--mainnet"},"TestNet || MainNet"),(0,a.kt)("h5",{id:"send--deploy"},(0,a.kt)("inlineCode",{parentName:"h5"},"send || deploy")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"//You can use the BTC related js library to build a Taproot transaction that complies with the BRC20pm protocol rules and broadcast it to the chain.\n\n//JavaScript Source Code\nlet code = '...'\n\n\n//Operation\nlet callData = {\n    kid: 'kid',\n    method: 'method',\n    params: [...params],\n}\n\n\n//Script example\nconst marker = ec.encode('ord')\nconst mimetype = ec.encode('text/plain;charset=utf-8')\n\nconst brc20JSON = {\n    \"p\": \"brc-20\",\n    \"op\": \"send || deploy\",\n    \"src\": textToHex(code || JSON.stringify(calldata))\n}\n\n\n// Basic format of an 'inscription' script.\nconst script = [\n    'Your PubKey',\n    'OP_CHECKSIG',\n    'OP_0',\n    'OP_IF',\n    marker,\n    '01',\n    mimetype,\n    'OP_0',\n    ec.encode(JSON.stringify(brc20JSON)),\n    'OP_ENDIF'\n]\n\nfunction textToHex(text) {\n    var encoder = ec.encode(text);\n    return [...new Uint8Array(encoder)]\n        .map(x => x.toString(16).padStart(2, \"0\"))\n        .join(\"\");\n}\n\n")),(0,a.kt)("h4",{id:"localnet"},"LocalNet"),(0,a.kt)("h5",{id:"send--deploy-1"},(0,a.kt)("inlineCode",{parentName:"h5"},"send || deploy")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'//Send\nlet callData = {\n    kid: \'kid\',\n    method: \'method\',\n    params: [...params],\n}\n\nlet arg = JSON.stringify(callData);\n\nlet data = {\n    sender: account,\n    operation: "send",\n    source: str2Hex(arg)\n}\n\n//Deploy\n//npm install uglifyJS\nlet code = codeMinify(cScript)\n\nlet data = {\n    sender: account,\n    operation: "deploy",\n    source: str2Hex(code)\n}\n\nlet response = await post(BRC20pmNode_Url + "/indexer", data);\n\nconsole.log(response);\n\nfunction codeMinify(code) {\n    const options = {\n        warnings: true,\n        keep_fargs: true,\n        keep_fnames: true\n    };\n    const result = uglifyJS.minify(code, options);\n    if (result.error) throw result.error;\n    return result.code\n}\n')),(0,a.kt)("h3",{id:"where-is-the-script-stored"},"Where is the script stored?"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"script source code and operation instructions are stored on the BTC chain\nYou can use any method to perform deduction from the block number starting from BRC20pm to the latest block number to obtain the latest results.\n")),(0,a.kt)("h3",{id:"who-runs-brc20pms-nodes"},"Who runs BRC20pm\u2019s nodes?"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"Anyone can run BRC20pm node\n")))}p.isMDXComponent=!0}}]);